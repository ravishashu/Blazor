@inherits BaseComponent

<table class="table table-striped">
    <RepeaterComponent Items="servers">
        <Header>
        <thead>
            <tr>
                <th>
                    Name
                </th>
                <th>
                    City
                </th>
                <th>
                    Status
                </th>
                <th>
                    People Online
                </th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        </Header>
        <Row Context="server">
            <ServerComponent Server="server"></ServerComponent>
        </Row>
    </RepeaterComponent>
</table>

@code {

    [Parameter]
    public string? CityName { get; set; }

    [Parameter]
    public string SearchFilter { get; set; } = "";

    private List<Server>? servers;


    public override Task SetParametersAsync(ParameterView parameters)
    {
        if (parameters.TryGetValue<string>("CityName", out var cityName))
        {
            if (cityName != CityName)
            {
                base.SetParametersAsync(parameters);
            }
        }

        if (parameters.TryGetValue<string>("SearchFilter", out var searchFilter))
        {
            if (searchFilter != SearchFilter)
            {
                base.SetParametersAsync(parameters);
            }
        }

        return Task.CompletedTask;
    }

    protected override void OnParametersSet()
    {
        if (isFirstRender == false)
        {
            if (string.IsNullOrWhiteSpace(this.SearchFilter))
            {
                servers = ServersRepository.GetServersByCity(CityName ?? "Toronto");
            }
            else
            {
                servers = ServersRepository.SearchServers(this.SearchFilter);
            }
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        if (firstRender)
        {
            // Init here
            if (string.IsNullOrWhiteSpace(this.SearchFilter))
            {
                servers = ServersRepository.GetServersByCity(CityName ?? "Toronto");
            }
            else
            {
                servers = ServersRepository.SearchServers(this.SearchFilter);
            }

            StateHasChanged();
        }
    }


}